[{"id":0,"title":"API Index","content":"#\n\nThis section summarizes the APIs provided by BubblesJS:\n\n * @bubblesjs/utils\n   * getRequest(option): returns an Axios instance with unified status code\n     handling, error messaging and unauthorized callbacks\n   * createRequest(option): create an Axios instance with customizable\n     interceptors\n\nMore packages and APIs are coming soon.","routePath":"/bubblesjs/en/api/","lang":"en","toc":[],"domain":"","frontmatter":{},"version":""},{"id":1,"title":"Guide","content":"#\n\nWelcome to the BubblesJS Guide! This section takes you from zero to one:\n\n * Environment requirements and installation\n * Create projects with create-bubbles (React / Vue)\n * Development and preview\n * Production build and deployment\n * Frequently Asked Questions (FAQ)\n\nNow, let's start with the Start section~","routePath":"/bubblesjs/en/guide/","lang":"en","toc":[],"domain":"","frontmatter":{},"version":""},{"id":2,"title":"Quick Start","content":"#\n\nGetting started with BubblesJS is easy! Let's create your first project.\n\n\nEnvironment Requirements#\n\n * Node.js >= 18.0.0\n * Package manager: npm, yarn, pnpm, or bun\n\n\nCreate Project#\n\nYou can use create-bubbles to create a new BubblesJS project:\n\n\nChoose Template#\n\nDuring project creation, you'll be prompted to select a template:\n\n * React + Rsbuild + Biome: Fast React development with Rsbuild\n * Vue + Rsbuild + Biome: Vue development with Rsbuild and auto-imports\n * Vue + Rolldown + Oxc: Experimental build tools (uses Rolldown instead of\n   Vite)\n\n\nStart Development#\n\nAfter project creation, navigate to your project directory and start the\ndevelopment server:\n\n\n\n\nProject Structure#\n\n\n\n\nNext Steps#\n\n * üéØ Learn about Templates - Explore available project templates\n * üì¶ Packages Documentation - Discover utility packages\n * üîß API Reference - Check out available APIs\n\nHappy coding! üöÄ","routePath":"/bubblesjs/en/guide/start/quick-start","lang":"en","toc":[{"text":"Environment Requirements","id":"environment-requirements","depth":2,"charIndex":77},{"text":"Create Project","id":"create-project","depth":2,"charIndex":171},{"text":"Choose Template","id":"choose-template","depth":2,"charIndex":252},{"text":"Start Development","id":"start-development","depth":2,"charIndex":560},{"text":"Project Structure","id":"project-structure","depth":2,"charIndex":677},{"text":"Next Steps","id":"next-steps","depth":2,"charIndex":700}],"domain":"","frontmatter":{},"version":""},{"id":3,"title":"Hello World!","content":"#\n\n\nStart#\n\nWrite something to build your own docs! üéÅ","routePath":"/bubblesjs/en/hello","lang":"en","toc":[{"text":"Start","id":"start","depth":2,"charIndex":3}],"domain":"","frontmatter":{},"version":""},{"id":5,"title":"Packages","content":"#\n\nBubblesJS currently includes the following packages:\n\n * @bubblesjs/request: Modern request library based on Alova, providing complete\n   request wrapper and response handling\n * @bubblesjs/utils: Utility function collection containing common helper\n   methods\n * create-bubbles: Project scaffolding for React/Vue with multiple build\n   templates\n\n\nPackage Overview#\n\n\n@bubblesjs/request#\n\nModern request library built on Alova, providing:\n\n * Unified request and response handling\n * Flexible error handling mechanisms\n * Support for multiple adapters (fetch, axios, etc.)\n * Dual call mode support\n\n\n@bubblesjs/utils#\n\nUtility function collection:\n\n * Common utility functions\n * Type utilities\n * Helper methods\n\n\ncreate-bubbles#\n\nFast project scaffolding:\n\n * React + Rsbuild + Biome template\n * Vue + Rsbuild + Biome template\n * Vue + Rolldown + Oxc template\n\nUse the left navigation to view details of each package.","routePath":"/bubblesjs/en/packages/","lang":"en","toc":[{"text":"Package Overview","id":"package-overview","depth":2,"charIndex":351},{"text":"@bubblesjs/request","id":"bubblesjsrequest","depth":3,"charIndex":371},{"text":"@bubblesjs/utils","id":"bubblesjsutils","depth":3,"charIndex":604},{"text":"create-bubbles","id":"create-bubbles","depth":3,"charIndex":719}],"domain":"","frontmatter":{},"version":""},{"id":6,"title":"@bubblesjs/request","content":"#\n\nModern request library based on Alova, providing unified request and response\nhandling with flexible configuration options and multi-adapter support.\n\n\nFeatures#\n\n * üöÄ Modern Design: Built on Alova with declarative requests and reactive\n   features\n * üõ†Ô∏è Flexible Configuration: Support for global and runtime dynamic\n   configuration\n * üîÑ Dual Call Mode: Support for default instances and dynamic configuration\n   instances\n * üìù TypeScript: Complete type support\n * üéØ Smart Error Handling: Unified error handling and message notification\n   mechanisms\n * üîå Multi-Adapter Support: Support for fetch, axios and other request adapters\n\n\nInstallation#\n\n\nQuick Start#\n\n\nBasic Usage#\n\n\n\n\nDual Call Mode#\n\n\n\n\nAPI Documentation#\n\n\ncreateInstance(option)#\n\nCreates a standard Alova request instance.\n\nParameters#\n\n * option: requestOption - Configuration options\n\nConfiguration Options#\n\nPARAMETER                  TYPE                                      DEFAULT                                 DESCRIPTION\nbaseUrl                    string                                    '/'                                     Base URL\ntimeout                    number                                    0                                       Timeout in milliseconds, 0 means no timeout\ncommonHeaders              Record<string, string | (() => string)>   {}                                      Common headers, supports dynamic functions\nstatusMap                  statusMap                                 {success: 200, unAuthorized: 401}       HTTP status code mapping\ncodeMap                    codeMap                                   {success: [200], unAuthorized: [401]}   Business status code mapping\nresponseDataKey            string                                    'data'                                  Response data field name\nresponseMessageKey         string                                    'message'                               Response message field name\nisTransformResponse        boolean                                   true                                    Enable response transformation\nisShowSuccessMessage       boolean                                   false                                   Show success messages\nsuccessDefaultMessage      string                                    'Operation successful'                  Default success message\nisShowErrorMessage         boolean                                   true                                    Show error messages\nerrorDefaultMessage        string                                    'Service error'                         Default error message\nsuccessMessageFunc         (message: string) => void                 undefined                               Success message handler\nerrorMessageFunc           (message: string) => void                 undefined                               Error message handler\nunAuthorizedResponseFunc   () => void                                undefined                               Unauthorized handler\nrequestAdapter             AlovaRequestAdapter                       adapterFetch()                          Request adapter\nstatesHook                 StatesHook                                undefined                               State hook (for framework integration)\n\nReturn Value#\n\nReturns a configured Alova instance with the following HTTP methods:\n\n * Get(url, config?)\n * Post(url, config?)\n * Put(url, config?)\n * Delete(url, config?)\n * Patch(url, config?)\n * Head(url, config?)\n * Options(url, config?)\n\n\ncreateDualCallInstance(baseConfig)#\n\nCreates a dual call mode request instance factory.\n\nParameters#\n\n * baseConfig: baseRequestOption<AlovaGenerics> - Base configuration\n\nReturn Value#\n\nReturns a function that:\n\n 1. Returns default instance when called without parameters\n 2. Returns new instance with merged configuration when passed CustomConfig\n 3. Has all HTTP methods directly bound to the default instance\n\n\n\n\nUse Cases#\n\n\n1. Basic Project Configuration#\n\n\n\n\n2. Authenticated Requests#\n\n\n\n\n3. Business-Specific Configuration#\n\n\n\n\nType Definitions#\n\n\n\n\nBest Practices#\n\n\n1. Unified Error Handling#\n\n\n\n\n2. Modular Request Configuration#\n\n\n\n\nFAQ#\n\n\nQ: How to handle file downloads?#\n\nA: You can set isTransformResponse: false to get the full response:\n\n\n\n\nQ: How to implement request retry?#\n\nA: You can combine with Alova's retry functionality:\n\n\n\n\nQ: How to implement request caching?#\n\nA: Alova has built-in powerful caching functionality:\n\n\n\n\nSummary#\n\n@bubblesjs/request provides a modern, type-safe, feature-rich request solution.\nThrough flexible configuration options and dual call mode, it can meet various\nrequest scenario requirements from simple to complex.","routePath":"/bubblesjs/en/packages/request","lang":"en","toc":[{"text":"Features","id":"features","depth":2,"charIndex":154},{"text":"Installation","id":"installation","depth":2,"charIndex":643},{"text":"Quick Start","id":"quick-start","depth":2,"charIndex":659},{"text":"Basic Usage","id":"basic-usage","depth":3,"charIndex":674},{"text":"Dual Call Mode","id":"dual-call-mode","depth":3,"charIndex":691},{"text":"API Documentation","id":"api-documentation","depth":2,"charIndex":711},{"text":"createInstance(option)","id":"createinstanceoption","depth":3,"charIndex":732},{"text":"Parameters","id":"parameters","depth":4,"charIndex":801},{"text":"Configuration Options","id":"configuration-options","depth":4,"charIndex":864},{"text":"Return Value","id":"return-value","depth":4,"charIndex":3307},{"text":"createDualCallInstance(baseConfig)","id":"createdualcallinstancebaseconfig","depth":3,"charIndex":3552},{"text":"Parameters","id":"parameters-1","depth":4,"charIndex":3641},{"text":"Return Value","id":"return-value-1","depth":4,"charIndex":3724},{"text":"Use Cases","id":"use-cases","depth":2,"charIndex":3969},{"text":"1. Basic Project Configuration","id":"1-basic-project-configuration","depth":3,"charIndex":3982},{"text":"2. Authenticated Requests","id":"2-authenticated-requests","depth":3,"charIndex":4018},{"text":"3. Business-Specific Configuration","id":"3-business-specific-configuration","depth":3,"charIndex":4049},{"text":"Type Definitions","id":"type-definitions","depth":2,"charIndex":4089},{"text":"Best Practices","id":"best-practices","depth":2,"charIndex":4111},{"text":"1. Unified Error Handling","id":"1-unified-error-handling","depth":3,"charIndex":4129},{"text":"2. Modular Request Configuration","id":"2-modular-request-configuration","depth":3,"charIndex":4160},{"text":"FAQ","id":"faq","depth":2,"charIndex":4198},{"text":"Q: How to handle file downloads?","id":"q-how-to-handle-file-downloads","depth":3,"charIndex":4205},{"text":"Q: How to implement request retry?","id":"q-how-to-implement-request-retry","depth":3,"charIndex":4312},{"text":"Q: How to implement request caching?","id":"q-how-to-implement-request-caching","depth":3,"charIndex":4406},{"text":"Summary","id":"summary","depth":2,"charIndex":4503}],"domain":"","frontmatter":{},"version":""},{"id":7,"title":"@bubblesjs/utils","content":"#\n\nUtility function collection containing common helper methods and type utilities.\n\n\nInstallation#\n\n\nQuick Usage#\n\n\n\n\nAPI Documentation#\n\n\nUtility Functions#\n\ndeepMergeObject(target, source)#\n\nDeep merge two objects, supporting recursive merging of nested objects.\n\nParameters:\n\n * target: object - Target object\n * source: object - Source object\n\nReturn Value:\n\n * object - New merged object\n\nExample:\n\n\n\nNotes:\n\n * Arrays are replaced entirely, not merged at element level\n * Special objects like functions, Date, RegExp are assigned directly\n * Source object properties override target object properties with the same name\n\nisReadableStream(obj)#\n\nChecks if an object is a ReadableStream.\n\nParameters:\n\n * obj: any - Object to check\n\nReturn Value:\n\n * boolean - Returns true if it's a readable stream, false otherwise\n\nExample:\n\n\n\nUse Cases:\n\n * Distinguish different types of response bodies\n * Conditionally handle stream data\n * Adapter compatibility checks\n\n\nUse Cases#\n\n\n1. Configuration Object Merging#\n\n\n\n\n2. Response Handling Adaptation#\n\n\n\n\n3. Component Property Merging#\n\n\n\n\nType Definitions#\n\n\n\n\nBest Practices#\n\n\n1. Configuration Management#\n\n\n\n\n2. Response Adapter#\n\n\n\n\n3. Utility Function Combination#\n\n\n\n\nFAQ#\n\n\nQ: Does deepMergeObject modify the original objects?#\n\nA: No. deepMergeObject creates a new object and doesn't modify the input\nobjects.\n\n\n\n\nQ: How to handle array merging?#\n\nA: The current implementation replaces arrays entirely. If you need\nelement-level array merging, you can customize the handling:\n\n\n\n\nQ: Which environments does isReadableStream support?#\n\nA: Supports ReadableStream in modern browsers and Node.js environments. For\nunsupported environments, it safely returns false.\n\n\nSummary#\n\n@bubblesjs/utils provides practical utility functions, particularly suitable\nfor:\n\n * Configuration Management: Use deepMergeObject for flexible configuration\n   merging\n * Response Handling: Use isReadableStream to adapt different response types\n * Data Processing: Provide reliable tool support in various data manipulation\n   scenarios\n\nThese utility functions are thoroughly tested and can be safely used in\nproduction environments.","routePath":"/bubblesjs/en/packages/utils","lang":"en","toc":[{"text":"Installation","id":"installation","depth":2,"charIndex":85},{"text":"Quick Usage","id":"quick-usage","depth":2,"charIndex":101},{"text":"API Documentation","id":"api-documentation","depth":2,"charIndex":118},{"text":"Utility Functions","id":"utility-functions","depth":3,"charIndex":139},{"text":"deepMergeObject(target, source)","id":"deepmergeobjecttarget-source","depth":4,"charIndex":159},{"text":"isReadableStream(obj)","id":"isreadablestreamobj","depth":4,"charIndex":627},{"text":"Use Cases","id":"use-cases","depth":2,"charIndex":966},{"text":"1. Configuration Object Merging","id":"1-configuration-object-merging","depth":3,"charIndex":979},{"text":"2. Response Handling Adaptation","id":"2-response-handling-adaptation","depth":3,"charIndex":1016},{"text":"3. Component Property Merging","id":"3-component-property-merging","depth":3,"charIndex":1053},{"text":"Type Definitions","id":"type-definitions","depth":2,"charIndex":1088},{"text":"Best Practices","id":"best-practices","depth":2,"charIndex":1110},{"text":"1. Configuration Management","id":"1-configuration-management","depth":3,"charIndex":1128},{"text":"2. Response Adapter","id":"2-response-adapter","depth":3,"charIndex":1161},{"text":"3. Utility Function Combination","id":"3-utility-function-combination","depth":3,"charIndex":1186},{"text":"FAQ","id":"faq","depth":2,"charIndex":1223},{"text":"Q: Does deepMergeObject modify the original objects?","id":"q-does-deepmergeobject-modify-the-original-objects","depth":3,"charIndex":1230},{"text":"Q: How to handle array merging?","id":"q-how-to-handle-array-merging","depth":3,"charIndex":1371},{"text":"Q: Which environments does isReadableStream support?","id":"q-which-environments-does-isreadablestream-support","depth":3,"charIndex":1538},{"text":"Summary","id":"summary","depth":2,"charIndex":1722}],"domain":"","frontmatter":{},"version":""},{"id":8,"title":"Templates","content":"#\n\ncreate-bubbles provides the following templates to help you get started quickly:\n\n * React + Rsbuild + Biome (recommended)\n * Vue + Rsbuild + Biome\n * Vue + Rolldown + Oxc (experimental, uses Rolldown instead of Vite)\n\n\nTemplate Selection Guide#\n\n * Choose React + Rsbuild + Biome: Best for React projects with stable\n   development experience\n * Choose Vue + Rsbuild + Biome: Best for Vue projects seeking stable build\n   performance\n * Choose Vue + Rolldown + Oxc: Best for projects pursuing ultimate build speed\n   and cutting-edge technology\n\nUse the left navigation to view each template's usage and features.","routePath":"/bubblesjs/en/templates/","lang":"en","toc":[{"text":"Template Selection Guide","id":"template-selection-guide","depth":2,"charIndex":222}],"domain":"","frontmatter":{},"version":""},{"id":9,"title":"React + Rsbuild","content":"#\n\nPreset includes:\n\n * @rsbuild/core + @rsbuild/plugin-react\n * UnoCSS, Sass, SVGR\n * Auto Import (react, react-router)\n\n\nRun#\n\n\n\n\nImportant files#\n\n * rsbuild.config.ts: build config\n * src/router/index.tsx: router config\n * src/layout/default: base layout","routePath":"/bubblesjs/en/templates/react-rsbuild","lang":"en","toc":[{"text":"Run","id":"run","depth":2,"charIndex":122},{"text":"Important files","id":"important-files","depth":2,"charIndex":131}],"domain":"","frontmatter":{},"version":""},{"id":10,"title":"Vue + Rolldown + Oxc Template (Experimental)","content":"#\n\nThis template integrates Rolldown and Oxc for faster builds and stronger static\nanalysis capabilities.\n\n\nTechnology Stack#\n\n * Rolldown: Rust implementation of Vite, replaces standard Vite\n * Oxc: High-performance Rust-based code checking tool\n * Vue 3 + TypeScript: Modern Vue development experience\n * Element Plus + UnoCSS: UI component library and atomic CSS\n\n\nImportant Note#\n\nThis template uses vite.config.ts configuration file, but actually uses Rolldown\nbuild tool (replaced via \"vite\": \"npm:rolldown-vite@latest\").\n\n\nRun#\n\n\n\n\nNotes#\n\nThis template is experimental and may be less stable than Rsbuild/standard Vite.\nChoose according to your needs.","routePath":"/bubblesjs/en/templates/vue-rolldown-oxlint","lang":"en","toc":[{"text":"Technology Stack","id":"technology-stack","depth":2,"charIndex":107},{"text":"Important Note","id":"important-note","depth":2,"charIndex":367},{"text":"Run","id":"run","depth":2,"charIndex":529},{"text":"Notes","id":"notes","depth":2,"charIndex":538}],"domain":"","frontmatter":{},"version":""},{"id":11,"title":"Vue + Rsbuild","content":"#\n\nPreset includes:\n\n * @rsbuild/core + @rsbuild/plugin-vue\n * UnoCSS, Sass\n * Auto Import (vue, vue-router)\n\n\nRun#\n\n\n\n\nImportant files#\n\n * rsbuild.config.ts: build config\n * src/router: router config & entry\n * src/layout: base layout","routePath":"/bubblesjs/en/templates/vue-rsbuild","lang":"en","toc":[{"text":"Run","id":"run","depth":2,"charIndex":110},{"text":"Important files","id":"important-files","depth":2,"charIndex":119}],"domain":"","frontmatter":{},"version":""}]