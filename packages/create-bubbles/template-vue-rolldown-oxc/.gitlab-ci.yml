.send_dingtalk_notification: &send_dingtalk_notification |
  case "$CI_JOB_STAGE" in
    "build")
      stage_name="构建"
      ;;
    "deploy")
      stage_name="部署"
      ;;
  esac

  if [ "$CI_JOB_STATUS" == "success" ]; then
    title="==✅ ${stage_name}成功=="
  else
    title="==❌ ${stage_name}失败=="
  fi

  curl -s -X POST ${DINGTALK_WEBHOOK} \
    -H "Content-Type: application/json" \
    -d "{
      \"msgtype\": \"markdown\",
      \"markdown\": {
        \"title\": \"GitLab CI/CD 通知\",
        \"text\": \"### ${title}\n\n- **阶段**: ${stage_name}\n- **任务**: [查看详情](${CI_JOB_URL})\n- **分支**: ${CI_COMMIT_REF_NAME}\n- **提交人**: ${CI_COMMIT_AUTHOR}\n- **提交信息**: ${CI_COMMIT_MESSAGE}\n- **时间**: $(date '+%Y-%m-%d %H:%M:%S')\"
      }
    }"

stages:
  - build
  - deploy

variables:
  DEPLOY_PATH: '/usr/local/bee/web/pipe-network/pipe-network-model'
  DINGTALK_WEBHOOK: 'https://oapi.dingtalk.com/robot/send?access_token=${DING_TALK_ACCESS_TOKEN}'

cache:
  paths:
    - node_modules/

# 打包
build:
  stage: build
  script:
    - cd ${CI_PROJECT_DIR}
    - whoami
    - echo "===== 开始构建 ====="
    - pnpm install
    - pnpm build
    - echo "===== 构建完成 ====="
  only:
    - dev
  artifacts:
    paths:
      - dist/
  after_script:
    #钉钉通知
    - *send_dingtalk_notification

# 部署
deploy:
  stage: deploy
  needs: ['build']
  script:
    - echo "-----------------开始部署------------------"
    - |
      if [ "$CI_COMMIT_BRANCH" == "dev" ]; then
        ssh root@192.168.2.245 "rm -rf $DEPLOY_PATH/*" || { echo "❌ 清理245失败"; exit 1; }
        scp -r dist/* root@192.168.2.245:$DEPLOY_PATH || { echo "❌ 传输到245失败"; exit 1; }
        ssh root@192.168.2.57 "rm -rf $DEPLOY_PATH/*" || { echo "❌ 清理57失败"; exit 1; }
        scp -r dist/* root@192.168.2.57:$DEPLOY_PATH || { echo "❌ 传输到57失败"; exit 1; }
      else 
        echo "没有匹配到需要部署的分支或标签，跳过部署"
        exit 0
      fi
  after_script:
    #钉钉通知
    - *send_dingtalk_notification
